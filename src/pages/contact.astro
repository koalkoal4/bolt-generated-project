---
import BaseLayout from '../layouts/Base.astro';
---

<BaseLayout title="Contact Us">
  <main class="max-w-3xl mx-auto px-4 py-12">
    <h1 class="text-4xl font-bold text-slate-800 dark:text-slate-100 mb-8">Get in Touch</h1>
    <div class="bg-white dark:bg-slate-800 p-6 rounded-xl shadow-md">
      <form class="space-y-6">
        <div>
          <label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">Name</label>
          <input type="text" id="name" class="w-full px-4 py-2 border rounded-lg dark:bg-slate-700 dark:border-slate-600 dark:text-white" required>
        </div>
        <div>
          <label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">Email</label>
          <input type="email" id="email" class="w-full px-4 py-2 border rounded-lg dark:bg-slate-700 dark:border-slate-600 dark:text-white" required>
        </div>
        <div>
          <label class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">Message</label>
          <textarea id="message" class="w-full px-4 py-2 border rounded-lg h-32 dark:bg-slate-700 dark:border-slate-600 dark:text-white" required></textarea>
        </div>
        <button type="submit" id="submit-button" class="bg-primary-600 text-white px-6 py-2 rounded-lg hover:bg-primary-700 transition-colors disabled:opacity-50">
          Send Message
        </button>
      </form>
    </div>
    <div id="status-message" class="mt-4 text-center text-sm font-medium"></div>
  </main>
</BaseLayout>

<script>
  import { createClient } from '@supabase/supabase-js';

  const supabaseUrl = 'https://ekhcxkusapmzggcjkdls.supabase.co';
  const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVraGN4a3VzYXBtemdnY2prZGxzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM1MDkyMzEsImV4cCI6MjA1OTA4NTIzMX0.t7_JWiyOHBWd7nKbmwFwvLNaAJlZS1pwk5tv1gOu5Mw';
  const supabase = createClient(supabaseUrl, supabaseAnonKey);

  const form = document.querySelector('form');
  const submitButton = document.getElementById('submit-button');

  form.addEventListener('submit', async (event) => {
    event.preventDefault(); // Prevent default form submission

    const nameInput = document.getElementById('name') as HTMLInputElement;
    const emailInput = document.getElementById('email') as HTMLInputElement;
    const messageInput = document.getElementById('message') as HTMLTextAreaElement;

    const name = nameInput.value;
    const email = emailInput.value;
    const message = messageInput.value;

    // Disable button during submission
    submitButton.disabled = true;
    submitButton.textContent = 'Sending...';

    try {
      const { data, error } = await supabase
        .from('contacts') // Use the table name you provided
        .insert([{ name, email, message }]);

      const statusMessageDiv = document.getElementById('status-message');
      statusMessageDiv.textContent = ''; // Clear previous messages
      statusMessageDiv.className = 'mt-4 text-center text-sm font-medium'; // Reset classes

      if (error) {
        console.error('Error inserting data:', error);
        statusMessageDiv.textContent = `Error sending message: ${error.message}`;
        statusMessageDiv.classList.add('text-red-600', 'dark:text-red-400');
        submitButton.textContent = 'Send Message';
      } else {
        console.log('Data inserted:', data);
        statusMessageDiv.textContent = 'Message sent successfully!';
        statusMessageDiv.classList.add('text-green-600', 'dark:text-green-400');
        form.reset();
        submitButton.textContent = 'Message Sent!';
        setTimeout(() => {
            submitButton.textContent = 'Send Message';
        }, 3000);
      }
    } catch (error) {
      console.error('Unexpected error:', error);
      statusMessageDiv.textContent = 'An unexpected error occurred. Please try again.';
      statusMessageDiv.classList.add('text-red-600', 'dark:text-red-400');
      submitButton.textContent = 'Send Message'; // Reset button text on error
    } finally {
      // Re-enable button only if it wasn't successful or after timeout
      if (submitButton.textContent !== 'Message Sent!') {
          submitButton.disabled = false;
      } else {
          // Keep disabled briefly after success message, then clear status
          setTimeout(() => {
              statusMessageDiv.textContent = ''; // Clear success message
              statusMessageDiv.className = 'mt-4 text-center text-sm font-medium'; // Reset classes
              submitButton.disabled = false;
          }, 3000);
      }
    }
  });
</script>
